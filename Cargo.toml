[package]
name = "vvtk"
version = "0.1.0"
authors = [
   "weitsang <weitsang@nus.edu.sg>", 
   "YoungHS-NUS <hhhh@u.nus.edu>",
   "tankangliang <tankangliang@u.nus.edu>",
   "benclmnt <bennett.clement@u.nus.edu>",
   "hungkhoaitay <e0550385@u.nus.edu>", 
   "giterator <e0552200@u.nus.edu>"
   ]
edition = "2021"

description = "This project aims to design and develop a set of robust and high performance CLI tools for analyzing, processing, debugging, and viewing 3D point clouds using Rust"
readme = "README.md"
repository = "https://github.com/nus-vv-stream/vvtk"

license = "Apache-2.0"
keywords = ["3D", "Point Cloud", "Volumetric Video"]
categories = ["command-line-utilities"]
autobins = false

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[profile.release]
debug = true

[lib]
name = "vivotk"
path = "src/lib.rs"

[dependencies]
ply-rs = { git = "https://github.com/hungkhoaitay/ply-rs", version = "0.1.3" }

tmc2rs = { git = "https://github.com/nus-vv-streams/tmc2-rs", branch = "main" }
# use local tmc2rs
# tmc2rs = { path = "../tmc2-rs" }

# clap = { version = "3.0.14", features = ["derive"] }
clap = { version = "4.2.7", features = ["derive", "cargo"] }

image = "0.24.3"
nalgebra = "0.32.3"
approx = "0.5.1"
clipboard = "0.5.0"
thiserror = "1.0"
byteorder = "1.4.3"
bytemuck = { version = "1.7.3", features = [ "derive" ] }
cgmath = "0.18.0"
pollster = "0.3.0"
rayon = "1.5.1"
kdam = "0.3"
anyhow = "1.0"
roxmltree = "0.15"
kiddo = "0.2.4"
bincode = "1.3.3"
log = "0.4.17"
env_logger = { version = "0.10.0", default-features = false }
futures = { version = "0.3", optional = true }
tokio = { version = "1", features = ["full"], optional = true }
winit = { version = "0.27.3", optional = true }
wgpu = { version = "0.13.1", optional = true }
wgpu_glyph = { version = "0.17.0", optional = true }
egui = { version = "0.19.0", optional = true }
egui_winit_platform = { version = "0.16.0", optional = true } 
egui_wgpu_backend = { version = "0.19.0", optional = true }
epi = { version = "0.17.0", optional = true }
regex = { version = "1.6.0", optional = true }
reqwest = { version = "0.11", features = ["gzip"], optional = true }
tempfile = { version = "3", optional = true }
serde = { version = "1", features = ["derive"], optional = true }
serde_with = { version = "3.0.0", optional = true }
quick-xml = { version = "0.25", features = ["serialize"], optional = true }
crossbeam-channel = "0.5.6"
kdtree = "0.7.0"
num-traits = "0.2"
float-ord = "0.3"
color_space = "0.5"
serde_json = "1.0.113"
#ffmpeg-next = "6"

[dev-dependencies]
criterion = "0.4"

[[bin]]
name = "vvplay"
required-features = ["render", "dash"]

# [[bin]]
# name = "vvdash"

[[bin]]
name = "vv"

[[bin]]
name = "vvplay_async"
required-features = ["render", "dash"]

[features]
default = ["render", "dash"]
render = ["dep:winit", "dep:wgpu", "dep:wgpu_glyph", "dep:egui", "dep:egui_winit_platform", "dep:egui_wgpu_backend", "dep:epi"]
dash = ["dep:reqwest", "dep:regex", "dep:tempfile", "dep:quick-xml", "serde", "async"]
async = ["dep:tokio", "dep:futures"]
serde = ["dep:serde", "dep:serde_with"]
# use this feature to support resizing to a screen size larger than 2048x2048 (depending on your gpu support)
fullscreen = []

[[bench]]
name = "reader"
harness = false

[[bench]]
name = "abr"
harness = false
